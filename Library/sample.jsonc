{
    /*
    Modules are user defined and contain specific transaction instructions
    that can be run without interaction or not depending on implementation.

    This sample is pretty simple and just demonstrates various other options
    available to the designer
    */
    "name": "Sample",
    "description": "A sample for demonstration",
    "version": "V1",
    // Define aliases at the module scope
    // alias types may be one of string, number, object, address or move-function
    "aliases":
    [
        // An alias can just be a literal
        {
            "name": "Owner",
            "alias_type": "address",
            "alias_value": "0xa9e2db385f055cc0215a3cde268b76270535b9443807514f183be86926c219f4"
        },
        // An alias can refer back to other aliases defined prior in this modules global scope
        {
            "name": "AliasOwner1",
            "alias_type": "address",
            "alias_value": {
                "$ref": "#Owner"
            }
        },
        // An alias can also encapsulate more complex information
        // like a contract function
        {
            "name": "Mint",
            "alias_type": "move-function",
            "alias_value": "0xcc9f55f5403e5df0ec802b3bf6f9849e0fe85ae3fa29c166d066425aa96b6ea9::sample::mint",
            "has_return": true,
            "returns": "single",
            "result": "mint_token"
        }
    ],
    // Define one or more transactions available in this module
    // Each transaction marks an execution boundary
    "transactions": [
        {
            // Name it for reference and semantics
            // (i.e. CreatePO, ApprovePO, CancelPO, SubmitPO, etc.)
            "name":"MoveCoin",
            // Set the sender (optional) here. sponsor is also an attribute
            "sender": {
                "$ref": "#Owner"
            },
            // Transaction scoped aliases
            // optionally merged with module global aliases (implementation defined)
            "aliases": [
                {
                    "name": "Reciever",
                    "alias_type": "address",
                    // "alias_value": "0x0c2bbc042e4ce750ee98ce017bee8ddbfc8b70da00979374bf9c0964ce02e3ed"
                    "alias_value": {
                        "$ref": "#Owner"
                    }
                }

            ],
            // Articulate the commands for this transaction
            "commands":[
                {
                    // Names are defined by designer.
                    "name": "SplitCoin",
                    // Always refers to a builder command function
                    "builder_command": "split_coins",
                    // Align to the arguments and types defined in the builder functions
                    "coin": "gas",
                    "amounts": [1000000]
                },
                {
                    "name": "SendCoinTo",
                    "builder_command": "transfer_objects",
                    "objects":
                    [
                        // Demonstrate using the result of a transactions command
                        // as input into this command. This refers back to the
                        // output of a prior command.
                        {
                            "$ref": "#SplitCoin/coin_result"
                        }
                    ],
                    // Can be litereal or alias defined as well
                    "recipient":
                    {
                        "$ref": "#Reciever"
                    }
                }
            ]
        }
    ]

}